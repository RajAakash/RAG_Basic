Chunk 1: 
 QuickstartEager to get started? This page gives a good introduction to Flask. Follow Installation to set up aproject and install Flask first.A Minimal ApplicationA minimal Flask application looks something like this:fromflaskimportFlaskapp=Flask(__name__)@app.route("/")defhello_world():return"<p>Hello, World!</p>"So what did that code do?1. First we imported the Flask class. An instance of this class will be our WSGI application.2. Next we create an instance of this class. The first argument is the name of the application’smodule or package. __name__ is a convenient shortcut for this that is appropriate for mostcases. This is needed so that Flask knows where to look for resources such as templates andstatic files.3. We then use the route() decorator to tell Flask what URL should trigger our function.4. The function returns the message we want to display in the user’s browser. The default con-tent type is HTML, so HTML in the string will be rendered by the browser.Save it as hello.py or 

Chunk 2: 
 function.4. The function returns the message we want to display in the user’s browser. The default con-tent type is HTML, so HTML in the string will be rendered by the browser.Save it as hello.py or something similar. Make sure to not call your application flask.py be-cause this would conflict with Flask itself.To run the application, use the flask command or python -m flask. You need to tell theFlask where your application is with the --app option.$ flask --app hello run * Serving Flask app 'hello' * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)Application Discovery Behavior:As a shortcut, if the file is named app.py or wsgi.py, you don’t have to use --app. SeeCommand Line Interface for more details.enstable 

